#!/bin/bash
#
# Created by Perry Driscoll 31/1/2022
#
# LAPS FOR JAMF
#
# Script to Encrypt LAPS password and create local admin
#
# JAMF Script Variables
# $4: Local Admin Username
# $5: Encrypted API Credentials
# $6: JSS URL
# $7: Extension Attribute ID - Decryption Key
# $8: Extension Attribute Name - Decryption Key
# $9: Extension Attribute ID - Encrypted Secret Password
# $10: Extension Attribute Name - Encrypted Secret Password 
#
#############################################################

# API Credentials

encryptedcreds="$5"

token=$(curl -s -H "Content-Type: application/json" -H "Authorization: Basic ${encryptedcreds}" -X POST "$6/api/v1/auth/token" | grep 'token' | tr -d '"',',' | sed -e 's#token :##' | xargs)

# Random password to be used
password=$(openssl rand -base64 32 | cut -c -14 | tr -d \/ | tr -d //)

# Random Secret used to Encrypt and Decrypt password
secret=$(openssl rand -base64 32 | cut -c -14 | tr -d \/ | tr -d //)

# Encrypt Random password and save to file
cryptkey=$(echo "$password" | openssl enc -aes-256-cbc -md sha512 -a -salt -pass pass:$secret)

# Create local admin

if dscl . read /Groups/admin | grep $4; then
	echo "$4 has already been created and is a local admin. Resetting local admin password...."
	
	# Reset local admin password
	
    token=$(curl -s -H "Content-Type: application/json" -H "Authorization: Basic ${encryptedcreds}" -X POST "$6/api/v1/auth/token" | grep 'token' | tr -d '"',',' | sed -e 's#token :##' | xargs)
	serial=$(system_profiler SPHardwareDataType | awk '/Serial Number/{print $4}')
	ID=$(curl -X GET "$6/JSSResource/computers/serialnumber/$serial" -H 'Accept: application/xml' -H "Authorization:Bearer ${token}" | tr '<' '\n' | grep -m 1 id | tr -d 'id>')	
	OLDkey=$(curl -s -X "GET" "$6/JSSResource/computers/id/$ID/subset/extension_attributes" -H 'Accept: application/json' -H "Authorization:Bearer ${token}" | tr '{' '\n' | grep CryptKey | tr '"' ' ' | awk '{print $16}')
	OLDsecret=$(curl -s -X "GET" "$6/JSSResource/computers/id/$ID/subset/extension_attributes" -H "Accept: application/json" -H "Authorization:Bearer ${token}" | tr '{' '\n' | grep -i SECRET | tr '"' ' ' | awk '{print $16}')
	OLDpasswd=$(echo $OLDkey | openssl enc -aes-256-cbc -md sha512 -a -d -salt -pass pass:$OLDsecret)
		
		sysadminctl -adminUser $4 -adminPassword $OLDpasswd -resetPasswordFor $4 -newPassword $password
		dscl /Local/Default -authonly $4 $password
		rm -rf /Users/$4/Library/Keychains/*
else
	echo "$4 does not exist. Creating local admin now"
sudo dscl . -create /Users/$4
sudo dscl . -create /Users/$4 UserShell /bin/bash
sudo dscl . -create /Users/$4 RealName $4
sudo dscl . -create /Users/$4 UniqueID 1001
sudo dscl . -create /Users/$4 PrimaryGroupID 1000
sudo dscl . -create /Users/$4 NFSHomeDirectory /Local/Users/$4
sudo dscl . -passwd /Users/$4 $password
sudo dscl . -append /Groups/admin GroupMembership $4
fi

# Upload cryptkey to device inventory

serial=$(system_profiler SPHardwareDataType | awk '/Serial Number/{print $4}')
ID=$(curl -X GET "$6/JSSResource/computers/serialnumber/$serial" -H 'Accept: application/xml' -H "Authorization:Bearer ${token}" | tr '<' '\n' | grep -m 1 id | tr -d 'id>')

curl -s -X "PUT" "$6/JSSResource/computers/id/$ID/subset/extension_attributes" \
-H "Content-Type: application/xml" \
-H "Accept: application/xml" \
-H "Authorization:Bearer ${token}" \
-d "<computer><extension_attributes><extension_attribute><id>$7</id><name>$8</name><type>String</type><value>$cryptkey</value></extension_attribute></extension_attributes></computer>"

# Upload secret to device inventory

serial=$(system_profiler SPHardwareDataType | awk '/Serial Number/{print $4}')
ID=$(curl -X GET "$6/JSSResource/computers/serialnumber/$serial" -H 'Accept: application/xml' -H "Authorization:Bearer ${token}" | tr '<' '\n' | grep -m 1 id | tr -d 'id>')	

curl -s -X "PUT" "$6/JSSResource/computers/id/$ID/subset/extension_attributes" \
-H "Content-Type: application/xml" \
-H "Accept: application/xml" \
-H "Authorization:Bearer ${token}" \
-d "<computer><extension_attributes><extension_attribute><id>$9</id><name>${10}</name><type>String</type><value>$secret</value></extension_attribute></extension_attributes></computer>"
