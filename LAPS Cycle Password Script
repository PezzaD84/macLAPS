#!/bin/bash
#
# Created by Perry Driscoll 31/1/2022
#
# LAPS FOR JAMF
#
# Script to Encrypt LAPS password and create local admin
#
# JAMF Script Variables
# $4: Encryption password
# $5: Local Admin Username
# $6: API Username
# $7: API Password
# $8: JSS URL
#
####################################################

# Random password to be used
password=$(openssl rand -base64 32 | cut -c -14 | tr -d \/ | tr -d //)

# Random Secret used to Encrypt and Decrypt password
secret=$4

# Encrypt Random password and save to file
echo "$password" | openssl enc -aes-256-cbc -md sha512 -a -salt -pass pass:$secret > /var/tmp/cryptkey.txt

# Create local admin

if dscl . read /Groups/admin | grep $5; then
	echo "$5 has already been created and is a local admin. Resetting local admin password...."
	
	# Reset local admin password
	
	user=$6
	passwd=$7
	serial=$(system_profiler SPHardwareDataType | awk '/Serial Number/{print $4}')
	ID=$(curl -u $user:$passwd -X GET "https://$8/JSSResource/computers/serialnumber/$serial" | tr '<' '\n' | grep -m 1 id | tr -d 'id>')
	
	OLDkey=$(curl -k -s -u $user:$passwd -X "GET" "https://$8/JSSResource/computers/id/$ID/subset/extension_attributes" -H "Accept: application/json" | tr '{' '\n' | grep LAPS | tr '"' ' ' | awk '{print $16}')
		
		OLDpasswd=$(echo $OLDkey | openssl enc -aes-256-cbc -md sha512 -a -d -salt -pass pass:$4)
		
		sysadminctl -adminUser $5 -adminPassword $OLDpasswd -resetPasswordFor $5 -newPassword $password
		dscl /Local/Default -authonly $5 $password
		rm -rf /Users/$5/Library/Keychains/*
else
	echo "$5 does not exist. Creating local admin now"
sudo dscl . -create /Users/$5
sudo dscl . -create /Users/$5 UserShell /bin/bash
sudo dscl . -create /Users/$5 RealName “$5”
sudo dscl . -create /Users/$5 UniqueID 1001
sudo dscl . -create /Users/$5 PrimaryGroupID 1000
sudo dscl . -create /Users/$5 NFSHomeDirectory /Local/Users/$5
sudo dscl . -passwd /Users/$5 $password
sudo dscl . -append /Groups/admin GroupMembership $5
fi

# Upload cryptkey to device inventory

cryptkey=$(cat /var/tmp/cryptkey.txt)

user=$6
passwd=$7
serial=$(ioreg -l | grep IOPlatformSerialNumber | tr -d '"','=','|' | sed -e 's#IOPlatformSerialNumber##' | xargs)
ID=$(curl -u $user:$passwd -X GET "https://$8/JSSResource/computers/serialnumber/$serial" | tr '<' '\n' | grep -m 1 id | tr -d 'id>')

curl -k -s -u $user:$passwd -X "PUT" "https://$8/JSSResource/computers/id/$ID/subset/extension_attributes" \
-H "Content-Type: application/xml" \
-H "Accept: application/xml" \
-d "<computer><extension_attributes><extension_attribute><id>1</id><name>LAPS CryptKey</name><type>String</type><value>$cryptkey</value></extension_attribute></extension_attributes></computer>"

rm -f /var/tmp/cryptkey.txt
