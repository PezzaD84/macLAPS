Change log of feature updates and improvments

# macOSLAPS - v2.2.2

# - Additional Error Checking added
    Additional checks have been added to the script to check for previous failures and to clean up any existing LAPS logs and LAPS accounts which could cause issues during setup or cycling the password.

# macOSLAPS - v2.2.1

# - Check for existing duplicate admin account
    A failsafe has been put in to stop the creation of the LAPS account if an existing account exists with the same name on first run.
# - Password validation
    Password validation has been added to the password reset section of the script. The script will now error out if password validation fails.
# - Decoder script now manages the installation and validation of Swift Dialog
    You no longer have to install the LAPS.pkg to install the branding and Swift Dialog app. This is now done using automated script functions to validate the installation and version of Swift Dialog.
    
# macOSLAPS - v2.2

# - Require Device name and Reason
    Device name is now a requirement of the decryption app along with a reason for viewing the password. These are all passed to the LAPS log along with the user requesting the password. 
# - Fixed bug in escrow check
    A bug was found that gave false positive results when either the CryptKey or SecretKey had failed to upload. This has now been fixed.
# - LAPS pkg updated
    Generic branding was found to be the wrong image. This has now been fixed.
# - Slack WebHook intergration added (Thanks to https://github.com/ons-mart for the idea)
    Both the Creation and Decryption scripts now have the option to add in a Slack webHooks app which will provide notifications and log info directly into a slack channel.
    
# macOSLAPS - v2.1

# - Cycle Password once viewed
    You can now specify if the LAPS Password should be reset after being viewed. If set, the password will be reset at the next reboot from the reset Password policy.

# macOSLAPS - v2

# - API Calls rewritten
    API calls for reading and writting to the extension attributes have been rewritten to free up JAMF Variables. General rewritting of API calls has also been done.
# - Additional Logs added
    Additional logging has been added which creates a local log of the LAPS Setup process and shows any errors. There is also a log kept form the decryption app to view who has requested the LAPS password.
# - Decryption App Updated
    The Decryption app has been updated to use swift Dialog which gives the user a nicer interface to request and view the LAPS password.
# - Password complexity added
    You can now specify the length of the admin password and whether it has to contain a special character.
# - Cycle Password once viewed (**CURRENTLY ONLY WORKS IF PASSWORD IS VIEWED ON DEVICE TO BE RESET**)
    You can now specify if the LAPS Password should be reset after being viewed. If set, the password will be reset at the next reboot.
# - Extension attribute names
    The names of the extension attributes can no longer be set to any name. They must now be "LAPS CryptKey" and "LAPS Secret".

# macOSLAPS - v1.4

# - Account creation simplified
    Account creation has be changed to use the sysadminctl command which simplifies the account creation process.
# - LAPS Account Hanging at log in issue resolved
    An issue had come to my attention that the LAPS account would hang at log in. This has been resolved now by suppressing the setup assistant at first log in.

# macOSLAPS - v1.3

# - Temporary local storage of encrypted password and encryption secret removed
    Local files are no longer created containing the variables for later use.
# - K flag removed from curl calls
    The -k flag has been removed from all curl calls to help prevent MITM Attacks.

# macOSLAPS - v1.2

# - API access updated to use barer token
    Encrypted API credentials will need to be provided as a variable in Jamf.
# - Decryption password no longer needed
    You no longer need to set a known password to use as the decryption key. This is now randomised and encrypted and then automatically pulled from Jamf during the decryption process.
# - Use of second extension attribute added to manage random decryption secret
    New Extension attribute added to store the encrypted decryption secret.
